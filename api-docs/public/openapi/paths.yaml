paths:
  /pet/{petId}:
    get:
      tags:
      - "pet"
      summary: "Find pet by ID"
      description: "Returns a single pet"
      operationId: "getPetById"
      parameters:
      - name: "petId"
        in: "path"
        description: "ID of pet to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        '200':
          $ref: '../examples/pet/get_pet_by_id.yaml#/200'
        '400':
          $ref: '../examples/pet/get_pet_by_id.yaml#/400'
        '404':
          $ref: '../examples/pet/get_pet_by_id.yaml#/404'

  /pet/{petId}/uploadImage:
    post:
      tags:
      - "pet"
      summary: "Upload an image"
      description: "Upload a pet image"
      operationId: "uploadPetImage"
      parameters:
      - name: "petId"
        in: "path"
        description: "ID of pet to update"
        required: true
        type: "integer"
        format: "int64"
      requestBody:
        $ref: '../examples/pet/upload_image.yaml#/requestBody'
      responses:
        '200':
          $ref: '../examples/pet/upload_image.yaml#/200'
        '405':
          $ref: '../examples/pet/upload_image.yaml#/405'

  /pet:
    get:
      tags:
        - pet
      summary: Get a pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
                  status:
                    type: string
                    enum: [available, pending, sold]

  /store/inventory:
    get:
      tags:
        - store
      summary: Returns pet inventories by status
      description: Returns a map of status codes to quantities
      operationId: getInventory
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32

  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: Logs in with username and password
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  username:
                    type: string
                  token:
                    type: string
