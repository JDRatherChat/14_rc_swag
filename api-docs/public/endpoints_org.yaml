openapi: 3.1.0
info:
  title: RatherChat API
  description: RatherChat API documentation for developers
  version: 1.0.7
  termsOfService: /tos.md
  contact:
    email: dev@rather.chat

servers:
  - url: https://api.rather.chat/v1
    description: Production server
  - url: https://staging-api.rather.chat/v1
    description: Staging server

paths:
  /users:
    get:
      summary: List all users
      description: Retrieve a list of all registered users
      operationId: listUsers
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  total:
                    type: integer
                  page:
                    type: integer
                example:
                  users:
                    - id: "123"
                      username: "john_doe"
                      email: "john@example.com"
                  total: 50
                  page: 1

    post:
      summary: Create a new user
      description: Register a new user in the system
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /chats:
    get:
      summary: List user chats
      description: Get all chats for the authenticated user
      operationId: listChats
      responses:
        '200':
          description: List of chats
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chat'

    post:
      summary: Create new chat
      description: Start a new chat session
      operationId: createChat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - participants
              properties:
                participants:
                  type: array
                  items:
                    type: string
                title:
                  type: string
      responses:
        '201':
          description: Chat created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'

  /messages/{chatId}:
    get:
      summary: Get chat messages
      description: Retrieve messages from a specific chat
      operationId: getChatMessages
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
        - name: before
          in: query
          description: Get messages before this timestamp
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: List of messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'

    post:
      summary: Send message
      description: Send a new message to a chat
      operationId: sendMessage
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                attachments:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'

  /notifications:
    get:
      summary: Get notifications
      description: Retrieve user notifications
      operationId: getNotifications
      parameters:
        - name: unreadOnly
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: List of notifications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'

    patch:
      summary: Mark notifications as read
      description: Mark multiple notifications as read
      operationId: markNotificationsRead
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notificationIds:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Notifications marked as read successfully

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time

    Chat:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        participants:
          type: array
          items:
            $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date-time
        lastMessage:
          $ref: '#/components/schemas/Message'

    Message:
      type: object
      properties:
        id:
          type: string
        chatId:
          type: string
        sender:
          $ref: '#/components/schemas/User'
        content:
          type: string
        attachments:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time

    Notification:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum: [MESSAGE, MENTION, SYSTEM]
        content:
          type: string
        read:
          type: boolean
        createdAt:
          type: string
          format: date-time
